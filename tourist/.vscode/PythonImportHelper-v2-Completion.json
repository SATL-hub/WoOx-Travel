[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "razorpay",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "razorpay",
        "description": "razorpay",
        "detail": "razorpay",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'u@v_x(yhsbt)2cmpubk8-tmc8lmhlm$jbwpy&4(9vf=&j*2e%f'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['192.168.1.9', '127.0.0.1', '0.0.0.0','localhost']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "SECRET_KEY = 'u@v_x(yhsbt)2cmpubk8-tmc8lmhlm$jbwpy&4(9vf=&j*2e%f'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['192.168.1.9', '127.0.0.1', '0.0.0.0','localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['192.168.1.9', '127.0.0.1', '0.0.0.0','localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['192.168.1.9', '127.0.0.1', '0.0.0.0','localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'trip_plan'",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'trip_plan'\n]\nMIDDLEWARE = [",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'tourist.urls'",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "ROOT_URLCONF = 'tourist.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, \"templates\")],  \n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, \"templates\")],  \n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "WSGI_APPLICATION = 'tourist.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/2.0/ref/settings/#databases\nDATABASES = {\n     'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME':'trip_plan',\n        'USER':'root',\n        'HOST':'localhost',\n        'PASSWORD':'',",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "DATABASES = {\n     'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME':'trip_plan',\n        'USER':'root',\n        'HOST':'localhost',\n        'PASSWORD':'',\n    }\n}\n# Password validation",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "USE_TZ = True\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]\nMEDIA_ROOT=os.path.join(BASE_DIR,'media')",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]\nMEDIA_ROOT=os.path.join(BASE_DIR,'media')\nMEDIA_URL=\"/media/\"",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'gouriemaildemo@gmail.com'\nEMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]\nMEDIA_ROOT=os.path.join(BASE_DIR,'media')\nMEDIA_URL=\"/media/\"",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'thvi zxxm mcqz xieq'\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\nstatic_dir=os.path.join(BASE_DIR,'static')\nSTATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]\nMEDIA_ROOT=os.path.join(BASE_DIR,'media')\nMEDIA_URL=\"/media/\"",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "tourist.settings",
        "description": "tourist.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIR=[static_dir]\nMEDIA_ROOT=os.path.join(BASE_DIR,'media')\nMEDIA_URL=\"/media/\"",
        "detail": "tourist.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "tourist.urls",
        "description": "tourist.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',include('trip_plan.urls')),\n]+ static(settings.MEDIA_URL,document_root =settings.MEDIA_ROOT)",
        "detail": "tourist.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "tourist.wsgi",
        "description": "tourist.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "tourist.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0001_initial",
        "description": "trip_plan.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Confirmation',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "trip_plan.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0002_state_image1",
        "description": "trip_plan.migrations.0002_state_image1",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='state',\n            name='image1',\n            field=models.ImageField(blank=True, null=True, upload_to='state/'),\n        ),",
        "detail": "trip_plan.migrations.0002_state_image1",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0003_userregister_gender",
        "description": "trip_plan.migrations.0003_userregister_gender",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0002_state_image1'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='userregister',\n            name='gender',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "trip_plan.migrations.0003_userregister_gender",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0004_tourist_place_days",
        "description": "trip_plan.migrations.0004_tourist_place_days",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0003_userregister_gender'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tourist_place',\n            name='days',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "trip_plan.migrations.0004_tourist_place_days",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0005_reservation_name",
        "description": "trip_plan.migrations.0005_reservation_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0004_tourist_place_days'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='reservation',\n            name='name',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "trip_plan.migrations.0005_reservation_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0006_auto_20250329_0954",
        "description": "trip_plan.migrations.0006_auto_20250329_0954",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0005_reservation_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='reservation',\n            name='total_amount',\n            field=models.FloatField(blank=True, null=True),\n        ),",
        "detail": "trip_plan.migrations.0006_auto_20250329_0954",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0007_auto_20250329_0959",
        "description": "trip_plan.migrations.0007_auto_20250329_0959",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0006_auto_20250329_0954'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='reservation',\n            name='total_amount',\n            field=models.IntegerField(blank=True, null=True),\n        ),",
        "detail": "trip_plan.migrations.0007_auto_20250329_0959",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0008_reservation_gst_amount",
        "description": "trip_plan.migrations.0008_reservation_gst_amount",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0007_auto_20250329_0959'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='reservation',\n            name='gst_amount',\n            field=models.IntegerField(blank=True, null=True),\n        ),",
        "detail": "trip_plan.migrations.0008_reservation_gst_amount",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0009_reservation_total",
        "description": "trip_plan.migrations.0009_reservation_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0008_reservation_gst_amount'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='reservation',\n            name='total',\n            field=models.IntegerField(blank=True, null=True),\n        ),",
        "detail": "trip_plan.migrations.0009_reservation_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0010_feedback_reservation",
        "description": "trip_plan.migrations.0010_feedback_reservation",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0009_reservation_total'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='feedback',\n            name='reservation',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='trip_plan.Confirmation'),\n            preserve_default=False,",
        "detail": "trip_plan.migrations.0010_feedback_reservation",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0011_remove_feedback_reservation",
        "description": "trip_plan.migrations.0011_remove_feedback_reservation",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0010_feedback_reservation'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='feedback',\n            name='reservation',\n        ),\n    ]",
        "detail": "trip_plan.migrations.0011_remove_feedback_reservation",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "trip_plan.migrations.0012_reservation_feedback_given",
        "description": "trip_plan.migrations.0012_reservation_feedback_given",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('trip_plan', '0011_remove_feedback_reservation'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='reservation',\n            name='feedback_given',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "trip_plan.migrations.0012_reservation_feedback_given",
        "documentation": {}
    },
    {
        "label": "subtract",
        "kind": 2,
        "importPath": "trip_plan.templatetags.math_filters",
        "description": "trip_plan.templatetags.math_filters",
        "peekOfCode": "def subtract(value, arg):\n    try:\n        return float(value) - float(arg)\n    except (ValueError, TypeError):\n        return ''",
        "detail": "trip_plan.templatetags.math_filters",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "trip_plan.templatetags.math_filters",
        "description": "trip_plan.templatetags.math_filters",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef subtract(value, arg):\n    try:\n        return float(value) - float(arg)\n    except (ValueError, TypeError):\n        return ''",
        "detail": "trip_plan.templatetags.math_filters",
        "documentation": {}
    },
    {
        "label": "TripPlanConfig",
        "kind": 6,
        "importPath": "trip_plan.apps",
        "description": "trip_plan.apps",
        "peekOfCode": "class TripPlanConfig(AppConfig):\n    name = 'trip_plan'",
        "detail": "trip_plan.apps",
        "documentation": {}
    },
    {
        "label": "Userregister",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class Userregister(models.Model):\n    user=models.ForeignKey(User,on_delete=models.CASCADE)\n    name=models.CharField(max_length=50,null=True,blank=True)\n    email=models.EmailField(null=True,blank=True)\n    phone=models.BigIntegerField(null=True,blank=True)\n    gender=models.CharField(max_length=50,null=True,blank=True)\n    password=models.CharField(max_length=12,null=True,blank=True)\n    def __str__(self):\n        return self.user.first_name\nclass State(models.Model):",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "State",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class State(models.Model):\n    name=models.CharField(max_length=50,null=True,blank=True)\n    population=models.CharField(max_length=50,null=True,blank=True) \n    area=models.CharField(max_length=50,null=True,blank=True) \n    image=models.ImageField(upload_to='state/',null=True,blank=True)\n    content=models.TextField()\n    image1=models.ImageField(upload_to='state/',null=True,blank=True)\n    def __str__(self):\n        return self.name\nclass Tourist_place(models.Model):",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "Tourist_place",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class Tourist_place(models.Model):\n    name=models.ForeignKey(State,on_delete=models.CASCADE)\n    place=models.CharField(max_length=100,null=True,blank=True)\n    details=models.TextField(null=True,blank=True)\n    price_per=models.IntegerField(null=True,blank=True)\n    days=models.CharField(max_length=50,null=True,blank=True) \n    image=models.ImageField(upload_to='place/',null=True,blank=True)\n    def __str__(self):\n        return f\"{self.name.name}-{self.place}\"\nclass Reservation(models.Model):",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "Reservation",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class Reservation(models.Model):\n    user=models.ForeignKey(User,on_delete=models.CASCADE)\n    t_place=models.ForeignKey(Tourist_place,on_delete=models.CASCADE)\n    name=models.CharField(max_length=50,null=True,blank=True) \n    phone=models.BigIntegerField(null=True,blank=True)\n    email=models.EmailField(null=True,blank=True)\n    checkin=models.DateField(null=True,blank=True)\n    guest=models.IntegerField(null=True,blank=True)\n    total=models.IntegerField(null=True,blank=True)\n    gst_amount=models.IntegerField(null=True,blank=True)",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "Confirmation",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class Confirmation(models.Model):\n    STATUS_CHOICES=[\n        ('Pending','Pending'),\n        ('Partial','Partial'),\n        ('Full','Full')\n    ]\n    user=models.ForeignKey(User,on_delete=models.CASCADE)\n    reservation=models.ForeignKey(Reservation,on_delete=models.CASCADE)\n    paid_amount=models.BigIntegerField(null=True,blank=True)\n    status=models.CharField(max_length=50,choices=STATUS_CHOICES,default='Pending') ",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "Feedback",
        "kind": 6,
        "importPath": "trip_plan.models",
        "description": "trip_plan.models",
        "peekOfCode": "class Feedback(models.Model):\n    name=models.ForeignKey(User,on_delete=models.CASCADE)\n    date=models.DateField(default=timezone.now)  \n    rating=models.IntegerField(null=True,blank=True)    \n    content=models.TextField()\n    def __str__(self):\n        return self.name.first_name",
        "detail": "trip_plan.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "trip_plan.urls",
        "description": "trip_plan.urls",
        "peekOfCode": "urlpatterns = [\n    path('',views.home,name='home'),\n    path('loginn',views.loginn,name='loginn'),\n    path('logoutt',views.logoutt,name='logoutt'),\n    path('register',views.register,name='register'),\n    path('detail/<category>',views.detail,name='detail'),\n    path('reservation/<category>',views.reservation,name='reservation'),\n    path('confirm/<category>',views.confirm,name='confirm'),\n    path('payment_success/<category>',views.payment_success,name='payment_success'),\n    path('history',views.history,name=\"history\"),",
        "detail": "trip_plan.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def home(request):\n    print(\"sdf\")\n    try:\n        states=State.objects.all()\n        places=Tourist_place.objects.all()\n        return render(request,'trip_plan/home.html',{'states':states,'places':places})\n    except Exception as e:\n        print(\"error\",e)\n        return render(request,'trip_plan/home.html',{})\ndef loginn(request):",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "loginn",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def loginn(request):\n    if request.method==\"POST\":\n        username=request.POST.get('uname') \n        password=request.POST.get('password')\n        user=authenticate(request,username=username,password=password) \n        if user is not None:\n            login(request,user)\n            return HttpResponse('<script>alert(\"Welcome!\"); window.location=\"/\";</script>')\n        else:\n            return HttpResponse('<script>alert(\"invalid\"); window.location=\"/loginn\";</script>')",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def register(request):\n    if request.method==\"POST\":\n        name=request.POST.get('name')\n        email=request.POST.get('email')\n        phone=request.POST.get('phone')\n        gender=request.POST.get('gender')\n        password=request.POST.get('password')\n        repassword=request.POST.get('repassword')\n        if User.objects.filter(username=email).exists():\n            return HttpResponse('<script>alert(\"User Already Exists!\"); window.location=\"/register\";</script>')",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "logoutt",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def logoutt(request):\n    logout(request)\n    return redirect('home')    \ndef detail(request,category):\n    state=State.objects.get(name=category)\n    places=Tourist_place.objects.filter(name=state)\n    gallery=[i.image for i in places]\n    gallery.extend([state.image,state.image1])\n    return render(request,'trip_plan/detail.html',{'state':state,'places':places,'gallery':gallery})\ndef totalprice(g,p,gst_rate=18):",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "detail",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def detail(request,category):\n    state=State.objects.get(name=category)\n    places=Tourist_place.objects.filter(name=state)\n    gallery=[i.image for i in places]\n    gallery.extend([state.image,state.image1])\n    return render(request,'trip_plan/detail.html',{'state':state,'places':places,'gallery':gallery})\ndef totalprice(g,p,gst_rate=18):\n    f=int(p.price_per)*int(g)\n    gst=(gst_rate * f) / 100\n    # print(p.price_per)",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "totalprice",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def totalprice(g,p,gst_rate=18):\n    f=int(p.price_per)*int(g)\n    gst=(gst_rate * f) / 100\n    # print(p.price_per)\n    # print(f)\n    total_amount=f + gst \n    return total_amount,gst,f\ndef reservation(request,category):\n    if not User.objects.filter(username=request.user.username).exists():\n        return redirect('loginn')",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "reservation",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def reservation(request,category):\n    if not User.objects.filter(username=request.user.username).exists():\n        return redirect('loginn')\n    else:\n        places=Tourist_place.objects.get(place=category)\n        if request.method==\"POST\":\n            name=request.POST.get('Name')\n            phone=request.POST.get('Number')\n            guests=request.POST.get('noo')\n            email=request.POST.get('email')",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "confirm",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def confirm(request, category):\n    t = Reservation.objects.get(id=category, user=request.user)\n    if request.method == \"POST\":\n        t = Reservation.objects.get(id=category, user=request.user)\n        total = t.total_amount * 0.25\n        if total >= 50000:\n            total=40000\n        existing_confirmation = Confirmation.objects.filter(user=request.user, reservation=t).first()\n        if existing_confirmation:\n            return JsonResponse({'status': 'error', 'message': 'Confirmation already exists'})",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "payment_success",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def payment_success(request,category):\n    if request.method == \"POST\":\n        try:\n            user = User.objects.get(username=request.user.username)\n            t=Reservation.objects.get(id=category,user=request.user)\n            con = Confirmation.objects.get(reservation=t)\n            print(\"con\",con)\n            try:\n                con.status=\"Partial\"\n                con.save()",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "history",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def history(request):\n    today=date.today()\n    confirm = Confirmation.objects.filter(user=request.user)\n    return render(request,'trip_plan/history.html',{\"confirms\":confirm,'today':today})\ndef about(request):\n    return render(request,'trip_plan/about.html',{})\nfrom django.core.paginator import Paginator\ndef deals(request):\n    t=Tourist_place.objects.all()\n    paginator = Paginator(t, 2)  # Show 2 offers per page (adjust as needed)",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def about(request):\n    return render(request,'trip_plan/about.html',{})\nfrom django.core.paginator import Paginator\ndef deals(request):\n    t=Tourist_place.objects.all()\n    paginator = Paginator(t, 2)  # Show 2 offers per page (adjust as needed)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n    return render(request,'trip_plan/deals.html',{\"places\":page_obj})\ndef feedback(request,category):",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "deals",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def deals(request):\n    t=Tourist_place.objects.all()\n    paginator = Paginator(t, 2)  # Show 2 offers per page (adjust as needed)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n    return render(request,'trip_plan/deals.html',{\"places\":page_obj})\ndef feedback(request,category):\n    if request.method == \"POST\":\n        try:\n            review = request.POST.get('review')",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "feedback",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def feedback(request,category):\n    if request.method == \"POST\":\n        try:\n            review = request.POST.get('review')\n            rate = request.POST.get('rating')\n            feed = Feedback.objects.create(name=request.user,date=date.today(),rating=rate,content=review)\n            feed.save()\n            reservation = Reservation.objects.get(t_place=Tourist_place.objects.get(place=category))\n            reservation.feedback_given=True\n            reservation.save()",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "allreviews",
        "kind": 2,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "def allreviews(request):\n    feed= Feedback.objects.all()\n    return render(request,'trip_plan/reviews.html',{\"feed\":feed})",
        "detail": "trip_plan.views",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "trip_plan.views",
        "description": "trip_plan.views",
        "peekOfCode": "client = razorpay.Client(auth=(\"rzp_test_TBfF4W26Xkf4GO\", \"OJYkwRAieFbCtMc8VIysuO5o\"))\ndef confirm(request, category):\n    t = Reservation.objects.get(id=category, user=request.user)\n    if request.method == \"POST\":\n        t = Reservation.objects.get(id=category, user=request.user)\n        total = t.total_amount * 0.25\n        if total >= 50000:\n            total=40000\n        existing_confirmation = Confirmation.objects.filter(user=request.user, reservation=t).first()\n        if existing_confirmation:",
        "detail": "trip_plan.views",
        "documentation": {}
    }
]